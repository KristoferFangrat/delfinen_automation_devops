name: Python application

on:
  workflow_dispatch:
    inputs:
      show_message:
        description: "If failed tests log errors"
        required: true
        default: "false"
        type: boolean

jobs:
  # Test-jobb
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Klona repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Ställ in Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Installera beroenden
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Kör tester och logga eventuella felmeddelanden
      - name: Run tests and log errors
        run: |
          pytest tests/ || echo "Test failed. Check logs for details."
        continue-on-error: false # fortsätter även om testerna misslyckas
      - name: Run Streamlit app and check for errors
        run: |
          streamlit run app.py || echo "Streamlit app failed. Check logs for details."
        continue-on-error: false # fortsätter även om Streamlit-appen misslyckas

      # Skicka loggfiler som artefakter (om testerna misslyckas)
      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: pytest.log
  
  # Jobb för att bygga och pusha Docker-bilden
  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test  # Beroende på att 'build-and-test' är lyckad
    steps:
      # Klona repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Logga in på DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Spara service account-nyckeln till en fil
      - name: Set up GCP credentials
        run: echo "${{ secrets.GCP_SA_KEY }}" > service-account-key.json

      # Bygg Docker-image
      - name: Build Docker image
        run: docker build -t mystreamlitapp .

      # Tag Docker-image för Docker Hub
      - name: Tag Docker image for Docker Hub
        run: docker tag mystreamlitapp ${{ secrets.DOCKERHUB_USERNAME }}/mystreamlitapp:weatherapp

      # Pusha Docker-image till Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/mystreamlitapp:weatherapp